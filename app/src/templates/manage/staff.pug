extends managepage.pug

include ../mixins/inputs.pug
include ../mixins/modals.pug
include ../mixins/timestamp.pug
include ../mixins/text.pug
include ../mixins/controls.pug
include ../mixins/icons.pug

mixin userRole(b, r)
  span(class=`user__role`)
    a(href=`/${b}/`, title='Go to board', class='user__role__board', class={'highlight': b === query.board}) /#{b}/
    | :
    a(href=`/manage/roles/${r.roleName}`, title='Edit role', class='user__role__name', class={'highlight': r.roleName === query.role}) #{r.roleName}

mixin userRow(u)
  - var userClass = `user_${u.login}`;
  td
    a.user__login(href=`/manage/staff/edit/${ u.login }` title='Edit user', class=userClass, class={'highlight': u.login === query.login})= u.login
    if u.name
      small.unimportant  (aka #[span.user__name #{u.name}])
  td
    span.user__authority(class=userClass, class={'highlight': u.authority === query.authority})= u.authority
  td
    -var omitFilter = ([b, r]) => (query.role && query.role !== r.roleName) || (query.board && query.board !== b);
    -var rolesArr = Array.from(Object.entries(u.boardRoles || {}));
    -var omittedRoles = rolesArr.filter(omitFilter);
    -var notOmittedRoles = rolesArr.filter(o => !omittedRoles.includes(o));
    span.user__roles(class=userClass)
      for boardrole, i in notOmittedRoles
        -var b = boardrole[0];
        -var r = boardrole[1];
        if i !== 0
          | ,
          |
        +userRole(b, r)
    if omittedRoles.length
      div
        +showOmittedBtn(omittedRoles.length, `.${userClass}.user__roles_omitted`)
      span.user__roles_omitted.hidden(class=userClass)
        for boardrole, i in omittedRoles
          -var b = boardrole[0];
          -var r = boardrole[1];
          if i !== 0
            | ,
            |
          +userRole(b, r)
  td
    span.user__created(class=userClass)
      +date(u.createdAt)
  td
    span.user__lastactive(class=userClass)
    +datetime(u.activeAt)


block header
  -
    const isCreate = crud === 'create';
    const isUpdate = crud === 'update';
    const isDelete = crud === 'delete';
    const isRead = crud === 'read';
  if isUpdate
    h1 Edit staff member #{staffMember.login}
  else
    h1 Staff
  if !isRead
    nav
      ul.list.list_buttons
        if !isRead
          li.list__item
            a(href='/manage/staff') All staff members


block main
  if isUpdate
    -
      const allRoles = roles.map(role => ({ value: role.roleName, label: role.roleName }));
      const allBoards = boards.map(board => ({ value: board.uri, label: `/${ board.uri }/` }));
    h2 #{staffMember.login} profile
    div
      p Login: #[strong= staffMember.login]
      if staffMember.name
        p Name: #[strong.nickname #{staffMember.name}]
      p Authority: #[strong= staffMember.authority]
      if staffMember.authority === 'admin'
        -
          const authorities = [{ value: 'admin', label: 'admin' }, { value: 'staff-member', label: 'staff-member' }, { value: 'guest', label: 'guest' }];
          const values = staffMember;
        form#form-cahnge-authority.js-api-form.js-reload-on-success(action='/api/user', 'data-method'='PATCH')
          input(type='hidden', name='user', value=staffMember.login)
          +comboboxEdit('authority', 'Auhority', authorities, '', true)
          input(type='submit', value='Change authority')
      p Joined: #[strong #[+date(staffMember.createdAt)]]
      p Last active: #[strong #[+datetime(staffMember.activeAt)]]
      if staffMember.contacts
        p Contacts:
        p= staffMember.contacts

    if staffMember.authority === 'admin'
      h3 Roles
      div.info Site administrator has all permissions by default.
    else
      if staffMember.boardRoles
        h3 Roles
        table.table
          thead
            tr.table__row.table__row_header
              th.table__header Delete
              th.table__header Board
              th.table__header Role
              th.table__header Change role
              th.table__header_vertical thread.isSticky
              th.table__header_vertical thread.isClosed
              th.table__header_vertical post.isSage
              th.table__header_vertical post.isApproved
              th.table__header_vertical post.isDeleted
              th.table__header_vertical attachment.isDeleted
              th.table__header_vertical attachment.isNSFW
              th.table__header_vertical attachment.isSpoiler
          tbody
            for role, board in staffMember.boardRoles
              tr.table__row
                td
                  form.js-api-form.js-reload-on-success(action='/api/user/role', 'data-method'='DELETE')
                    input(type='hidden', name='user', value=staffMember.login)
                    input(type='hidden', name='board', value=board)
                    input(type='submit', value='Delete')
                td
                  a(href=`/${board}/`) /#{board}/
                td
                  a(href=`/manage/roles/${role.roleName}/`)= role.roleName
                td
                  form.form_inline.js-api-form.js-reload-on-success(action='/api/user/role', 'data-method'='PATCH')
                    input(type='hidden', name='user', value=staffMember.login)
                    input(type='hidden', name='board', value=board)
                    -values = { role: role.roleName }
                    +comboboxEdit('role', '', allRoles, '', true)
                    input(type='submit', value='Save')
                td
                  +shortAccess(role, 'postPermissions', 'isSticky')
                td
                  +shortAccess(role, 'postPermissions', 'isClosed')
                td
                  +shortAccess(role, 'postPermissions', 'isSage')
                td
                  +shortAccess(role, 'postPermissions', 'isApproved')
                td
                  +shortAccess(role, 'postPermissions', 'isDeleted')
                td
                  +shortAccess(role, 'attachmentPermissions', 'isDeleted')
                td
                  +shortAccess(role, 'attachmentPermissions', 'isNSFW')
                td
                  +shortAccess(role, 'attachmentPermissions', 'isSpoiler')
      else
        h3 Roles
        div.info This user has no permissions on any board.

      h3 Add role
      form#form-add-role.form_inline.js-api-form.js-reload-on-success(action='/api/user/role', 'data-method'='PUT')
        input(type='hidden', name='user', value=staffMember.login)
        +comboboxEdit('board', 'Board', allBoards, '', true)
        +comboboxEdit('role', 'Role', allRoles, '', true)
        input(type='submit', value='Add role')

  if isRead
    - var queryArr = Array.from(Object.entries(query))
    table.table
      caption
        h2 Staff members
        if (queryArr.length)
          div.query-filters
            span.query-filters__title Active filters:
            | 
            for q, i in queryArr
              -var fname= q[0]
              -var fvalue= q[1]
              -var delquery = queryArr.filter(([qn, qv]) => qn !== fname && qv !== fvalue).map((qarr) => qarr.join('=')).join('&')
              span.query-filter.badge.badge_primary
                if i !== 0
                  | ,
                  |
                span.query-filter__field= fname
                | :
                span.query-filter__value= fvalue
                | 
                span.button
                  a(href=`?${delquery}`) #[+icon('times', 'small')]
      thead
        tr.table__row.table__row_header
          th.table__header.table__header_sortable(data-sort-field='login' data-sort-type='string') Login
          th.table__header.table__header_sortable(data-sort-field='authority' data-sort-type='string') Authority
          th.table__header Boards
          th.table__header.table__header_sortable(data-sort-field='created' data-sort-type='date') Joined
          th.table__header.table__header_sortable(data-sort-field='active' data-sort-type='date') Last active
      tbody
        -var staffNotOmitted = staff.filter(sm => !staffOmitted.includes(sm))
        for u in staffNotOmitted
          tr.table__row(data-login=u.login, data-authority=u.authority, data-created=u.createdAt, data-active=u.activeAt)
            +userRow(u)
        if staffOmitted.length
          tr.table__row.table__row_separator
            td(colspan=3)
              +showOmittedBtn(staffOmitted.length, '.table__row_omitted', 'users')
        for u in staffOmitted
          tr.table__row.table__row_omitted.hidden(data-login=u.login, data-authority=u.authority, data-created=u.createdAt, data-active=u.activeAt)
            +userRow(u)
